openapi: 3.0.3
info:
  title: Financial Manager Platform API
  description: API для управления финансами с поддержкой категорий, транзакций, планируемых расходов и доходов
  version: 1.0.0
  contact:
    name: FMP Team
    email: support@fmp.com

servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.fmp.com/v1
    description: Production server

paths:
  /categories:
    get:
      summary: Получить все категории
      tags:
        - Categories
      responses:
        '200':
          description: Список категорий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Создать новую категорию
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        '201':
          description: Категория создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /categories/{id}:
    get:
      summary: Получить категорию по ID
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Категория найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Обновить категорию
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        '200':
          description: Категория обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      summary: Удалить категорию
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Категория удалена
        '404':
          description: Категория не найдена

  /transactions:
    get:
      summary: Получить транзакции
      tags:
        - Transactions
      parameters:
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Список транзакций
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Создать новую транзакцию
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Транзакция создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  /transactions/{id}:
    get:
      summary: Получить транзакцию по ID
      tags:
        - Transactions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Транзакция найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    put:
      summary: Обновить транзакцию
      tags:
        - Transactions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '200':
          description: Транзакция обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      summary: Удалить транзакцию
      tags:
        - Transactions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Транзакция удалена

  /planned-expenses:
    get:
      summary: Получить планируемые расходы
      tags:
        - Planned Expenses
      parameters:
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
        - name: is_completed
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Список планируемых расходов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlannedExpense'
    post:
      summary: Создать планируемый расход
      tags:
        - Planned Expenses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlannedExpenseRequest'
      responses:
        '201':
          description: Планируемый расход создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedExpense'

  /planned-expenses/{id}:
    get:
      summary: Получить планируемый расход по ID
      tags:
        - Planned Expenses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Планируемый расход найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedExpense'
    put:
      summary: Обновить планируемый расход
      tags:
        - Planned Expenses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlannedExpenseRequest'
      responses:
        '200':
          description: Планируемый расход обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedExpense'
    delete:
      summary: Удалить планируемый расход
      tags:
        - Planned Expenses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Планируемый расход удален

  /planned-income:
    get:
      summary: Получить планируемые доходы
      tags:
        - Planned Income
      parameters:
        - name: month
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - name: year
          in: query
          schema:
            type: integer
            minimum: 2020
            maximum: 2030
      responses:
        '200':
          description: Список планируемых доходов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlannedIncome'
    post:
      summary: Создать планируемый доход
      tags:
        - Planned Income
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlannedIncomeRequest'
      responses:
        '201':
          description: Планируемый доход создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedIncome'

  /planned-income/{id}:
    get:
      summary: Получить планируемый доход по ID
      tags:
        - Planned Income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Планируемый доход найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedIncome'
    put:
      summary: Обновить планируемый доход
      tags:
        - Planned Income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlannedIncomeRequest'
      responses:
        '200':
          description: Планируемый доход обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedIncome'
    delete:
      summary: Удалить планируемый доход
      tags:
        - Planned Income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Планируемый доход удален

  /category-limits:
    get:
      summary: Получить лимиты по категориям
      tags:
        - Category Limits
      parameters:
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: month
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - name: year
          in: query
          schema:
            type: integer
            minimum: 2020
            maximum: 2030
      responses:
        '200':
          description: Список лимитов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryLimit'
    post:
      summary: Создать лимит для категории
      tags:
        - Category Limits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryLimitRequest'
      responses:
        '201':
          description: Лимит создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryLimit'

  /category-limits/{id}:
    get:
      summary: Получить лимит по ID
      tags:
        - Category Limits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Лимит найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryLimit'
    put:
      summary: Обновить лимит
      tags:
        - Category Limits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryLimitRequest'
      responses:
        '200':
          description: Лимит обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryLimit'
    delete:
      summary: Удалить лимит
      tags:
        - Category Limits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Лимит удален

  /analytics/monthly-summary:
    get:
      summary: Получить месячную сводку
      tags:
        - Analytics
      parameters:
        - name: month
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - name: year
          in: query
          required: true
          schema:
            type: integer
            minimum: 2020
            maximum: 2030
      responses:
        '200':
          description: Месячная сводка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlySummary'

  /analytics/category-summary:
    get:
      summary: Получить сводку по категориям
      tags:
        - Analytics
      parameters:
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Сводка по категориям
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategorySummary'

  /analytics/limit-exceeded:
    get:
      summary: Получить записи о превышении лимитов
      tags:
        - Analytics
      responses:
        '200':
          description: Список превышений лимитов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LimitExceeded'

  /notifications:
    get:
      summary: Получить уведомления
      tags:
        - Notifications
      responses:
        '200':
          description: Список уведомлений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
    post:
      summary: Создать уведомление
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRequest'
      responses:
        '201':
          description: Уведомление создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'

  /notifications/{id}/read:
    put:
      summary: Отметить уведомление как прочитанное
      tags:
        - Notifications
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Уведомление отмечено как прочитанное

  /notifications/stats:
    get:
      summary: Получить статистику уведомлений
      tags:
        - Notifications
      responses:
        '200':
          description: Статистика уведомлений
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStats'

  /notifications/check-daily:
    post:
      summary: Проверить ежедневные напоминания
      tags:
        - Notifications
      responses:
        '200':
          description: Проверка выполнена

  /notifications/check-limits:
    post:
      summary: Проверить предупреждения о лимитах
      tags:
        - Notifications
      responses:
        '200':
          description: Проверка выполнена

components:
  schemas:
    Category:
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 255
        description:
          type: string

    Transaction:
      type: object
      required:
        - id
        - category_id
        - amount
        - date
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        description:
          type: string
        date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateTransactionRequest:
      type: object
      required:
        - category_id
        - amount
      properties:
        category_id:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        description:
          type: string
        date:
          type: string
          format: date-time

    PlannedExpense:
      type: object
      required:
        - id
        - category_id
        - amount
        - planned_date
        - is_completed
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        description:
          type: string
        planned_date:
          type: string
          format: date-time
        is_completed:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreatePlannedExpenseRequest:
      type: object
      required:
        - category_id
        - amount
        - planned_date
      properties:
        category_id:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        description:
          type: string
        planned_date:
          type: string
          format: date-time

    PlannedIncome:
      type: object
      required:
        - id
        - amount
        - month
        - year
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        amount:
          type: number
          format: float
        description:
          type: string
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2020
          maximum: 2030
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreatePlannedIncomeRequest:
      type: object
      required:
        - amount
        - month
        - year
      properties:
        amount:
          type: number
          format: float
        description:
          type: string
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2020
          maximum: 2030

    CategoryLimit:
      type: object
      required:
        - id
        - category_id
        - limit
        - month
        - year
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        limit:
          type: number
          format: float
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2020
          maximum: 2030
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateCategoryLimitRequest:
      type: object
      required:
        - category_id
        - limit
        - month
        - year
      properties:
        category_id:
          type: string
          format: uuid
        limit:
          type: number
          format: float
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2020
          maximum: 2030

    MonthlySummary:
      type: object
      required:
        - month
        - year
        - categories
        - total
      properties:
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2020
          maximum: 2030
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategorySummary'
        total:
          type: number
          format: float

    CategorySummary:
      type: object
      required:
        - category_id
        - category_name
        - amount
        - is_exceeded
      properties:
        category_id:
          type: string
          format: uuid
        category_name:
          type: string
        amount:
          type: number
          format: float
        limit:
          type: number
          format: float
        is_exceeded:
          type: boolean

    LimitExceeded:
      type: object
      required:
        - id
        - category_id
        - limit
        - actual
        - month
        - year
        - created_at
      properties:
        id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        limit:
          type: number
          format: float
        actual:
          type: number
          format: float
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
          minimum: 2020
          maximum: 2030
        created_at:
          type: string
          format: date-time

    Notification:
      type: object
      required:
        - id
        - type
        - title
        - message
        - is_read
        - created_at
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - daily_reminder
            - limit_warning
            - limit_exceeded
            - income_reminder
        title:
          type: string
          maxLength: 255
        message:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time

    CreateNotificationRequest:
      type: object
      required:
        - type
        - title
        - message
      properties:
        type:
          type: string
          enum:
            - daily_reminder
            - limit_warning
            - limit_exceeded
            - income_reminder
        title:
          type: string
          maxLength: 255
        message:
          type: string

    NotificationStats:
      type: object
      required:
        - unread_count
        - total_count
      properties:
        unread_count:
          type: integer
          minimum: 0
        total_count:
          type: integer
          minimum: 0

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: integer

tags:
  - name: Categories
    description: Управление категориями расходов
  - name: Transactions
    description: Управление транзакциями
  - name: Planned Expenses
    description: Управление планируемыми расходами
  - name: Planned Income
    description: Управление планируемыми доходами
  - name: Category Limits
    description: Управление лимитами по категориям
  - name: Analytics
    description: Аналитика и отчеты
  - name: Notifications
    description: Система уведомлений
