---
- name: Deploy FMP Analytics
  hosts: fmp_analytics_servers
  become: yes
  vars:
    app_name: fmp-analytics
    app_port: 3001
    app_user: fmp
    app_group: fmp
    app_dir: /opt/fmp-analytics
    api_url: "{{ api_url | default('http://localhost:8080') }}"

  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install required packages
      apt:
        name:
          - curl
          - wget
          - unzip
          - nginx
          - nodejs
          - npm
        state: present

    - name: Create application user
      user:
        name: "{{ app_user }}"
        group: "{{ app_group }}"
        shell: /bin/bash
        home: "{{ app_dir }}"
        create_home: yes

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0755'

    - name: Copy application files
      copy:
        src: "{{ item }}"
        dest: "{{ app_dir }}/{{ item }}"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0644'
      with_fileglob:
        - "fmp-analytics/*"

    - name: Create environment file
      template:
        src: fmp-analytics.env.j2
        dest: "{{ app_dir }}/.env"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0600'

    - name: Install dependencies
      shell: |
        cd {{ app_dir }}
        npm install
      become_user: "{{ app_user }}"

    - name: Build application
      shell: |
        cd {{ app_dir }}
        npm run build
      become_user: "{{ app_user }}"

    - name: Configure nginx
      template:
        src: analytics-nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app_name }}
        mode: '0644'

    - name: Enable nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link

    - name: Test nginx configuration
      command: nginx -t

    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted

    - name: Configure firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "80"
        - "443"
      when: firewall_configure | default(true)
